vnote_backup_file_826537664 /Users/wei/local/vnote/java成神之路/实践篇/接口优化.md
# 接口优化
## 未优化之前，大概离线数据是1000个
![](_v_images/1619076058_19589.png)

# 异步处理（单线程，速度提高了10倍）
但是线程的新建是浪费资源的，采用线程池

```
 //优化方案1:异步处理
        new Thread(()->{
            log.info("开始异步处理任务");
            try {
                for (int i = 0; i < devices.size(); i++) {
                    List<String> device = devices.get(i);
                    saveOffLineDevice(device.get(0),device.get(1),device.get(2),device.get(3),device.get(4),regionIndexCode,regionName);
                }
            }catch (Exception e){
                log.error("批量导入失败",e);
            }
        }).start();

```
![](_v_images/1619076898_20015.png)


## 采用线程池异步也优化之后，速度优化不明显，瓶颈不在这里，在于验证和计算
![](_v_images/1619078714_19945.png)


## 多请求几次会快一点，但是还是不满足要求
可以看下各个部分的耗时情况
![](_v_images/1619079934_28908.png)
![](_v_images/1619079048_25455.png)


![](_v_images/1619083548_31159.png)

## 对验证文件进行优化
![](_v_images/1619083559_14662.png)

![](_v_images/1619084421_25527.png) 


1.